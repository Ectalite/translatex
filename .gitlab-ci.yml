image: python:3.10.11-bullseye

before_script:
  ## Install packages
  - python -m venv .venv/
  - source .venv/bin/activate
  - pip install -e .

test:
  stage: test
  before_script:
    - pip install -e .[test]
  script:
    - pytest --durations=0 --cov=src/translatex -sv --runapi
    - coverage html -d public/coverage
  coverage: '/TOTAL.*\s+(\d+\%)/'
  artifacts:
    paths:
      - public
  tags:
    - docker

doc:
  stage: test
  before_script:
    - apt -y -qq update && apt -y -qq install graphviz
    - pip install -e .[doc]
  script:
    - sphinx-build -b html docs/source/ public/
  except:
    - main
  artifacts:
    paths:
      - public
  tags:
    - docker

pages:
  stage: deploy
  before_script:
    - apt -y -qq update && apt -y -qq install graphviz
    - pip install -e .[doc]
  script:
    - sphinx-build -b html docs/source/ public/
  only:
    - main
  artifacts:
    paths:
      - public
  tags:
    - docker

release_job:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_TAG                 # Run this job when a tag is created
  before_script:
    - apk add --no-cache git
    - git config --global --add safe.directory /builds/erken/sokoban
  script:
    - echo "running release_job for $CI_COMMIT_TAG"
    - cp CHANGELOG.md RELEASE_NOTES.md
    - printf "\n## Commits since the last version\n" >> RELEASE_NOTES.md
    - printf "<details><summary>Click to expand</summary>\n" >> RELEASE_NOTES.md
    - LAST_TAGS=$(git for-each-ref --sort='-*committerdate' --count=2 --format '%(refname:short)' refs/tags)
    - git log --pretty="- [%as] %s" --no-merges --reverse $(echo $LAST_TAGS | tail -n 1)..$(echo $LAST_TAGS | head -n 1) >> RELEASE_NOTES.md
    - printf "\n</details>" >> RELEASE_NOTES.md
  release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: $CI_COMMIT_TAG
    name: 'Release $CI_COMMIT_TAG'
    description: './RELEASE_NOTES.md'

